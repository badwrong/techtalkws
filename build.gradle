plugins {
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'groovy'
    id 'jacoco'
}

group = 'com.homedepot.'
version = '1.0-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.commons:commons-lang3:3.4'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.spockframework:spock-core:1.1-groovy-2.4'
    testImplementation 'org.spockframework:spock-spring:1.1-groovy-2.4'
    testImplementation 'org.mockito:mockito-core:2.21.0'
}

sourceSets {
    integration {
        groovy {
            compileClasspath += main.output
            compileClasspath += main.compileClasspath
            compileClasspath += test.output
            compileClasspath += test.compileClasspath
            runtimeClasspath += test.runtimeClasspath
            srcDir file("src/integration/groovy")
        }
        resources.srcDir file("src/integration/resources")
    }
    test {
        java {
            srcDir file("src/test/java")
        }
        groovy {
            srcDir file("src/test/groovy")
        }
    }
}

apply plugin: "idea"
idea {
    module {
        testSourceDirs += project.sourceSets.integration.java.srcDirs
        testSourceDirs += project.sourceSets.integration.resources.srcDirs
        testSourceDirs += project.sourceSets.test.java.srcDirs
        testSourceDirs += project.sourceSets.test.resources.srcDirs
    }
}

task integration(type: Test) {
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    useJUnit {
        include "**/*IT.class"
    }
    testLogging.showStandardStreams = false

    afterTest { desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}
