apply plugin: "java"
apply plugin: 'groovy'
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "jacoco"
apply plugin: "maven"

group 'com.homedepot.'
sourceCompatibility = 1.8
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
buildscript {
    ext {
        springBootVersion = "2.1.3.RELEASE"
        lombokVersion = '1.18.6'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.apache.commons:commons-lang3:3.4")
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    compile ("org.springframework.boot:spring-boot-starter-data-jpa:2.3.0.RELEASE")
    compile("com.h2database:h2:1.4.200")


    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    testCompile("org.mockito:mockito-core:2.21.0")
    testCompile("org.hsqldb:hsqldb")
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("org.spockframework:spock-core:1.1-groovy-2.4")
    testCompile("org.spockframework:spock-spring:1.1-groovy-2.4")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
}

sourceSets {
    integration {
        groovy {
            compileClasspath += main.output
            compileClasspath += main.compileClasspath
            compileClasspath += test.output
            compileClasspath += test.compileClasspath
            runtimeClasspath += test.runtimeClasspath
            srcDir file("src/integration/groovy")
        }
        resources.srcDir file("src/integration/resources")
    }
    test {
        java {
            srcDir file("src/test/java")
        }
        groovy {
            srcDir file("src/test/groovy")
        }
    }
}

apply plugin: "idea"
idea {
    module {
        testSourceDirs += project.sourceSets.integration.java.srcDirs
        testSourceDirs += project.sourceSets.integration.resources.srcDirs
        testSourceDirs += project.sourceSets.test.java.srcDirs
        testSourceDirs += project.sourceSets.test.resources.srcDirs
    }
}

task integration(type: Test) {
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    useJUnit {
        include "**/*IT.class"
    }
    testLogging.showStandardStreams = false

    afterTest { desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}
